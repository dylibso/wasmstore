name: 'Release'

on:
  workflow_dispatch:
  release:
    types: created
jobs:
  exe:
    name: Release executable
    runs-on: '${{ matrix.os }}'
    steps:
      - name: 'Install deps'
        run: bash -c '''case "$(uname)" in
          (*Linux*) sudo apt update -y && sudo apt-get install -y libev-dev libssl-dev pkg-config; ;;
          (*Darwin*) brew install libev openssl pkg-config; ;;
          esac'''
      - name: 'Checkout code'
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache Rust environment
        uses: Swatinem/rust-cache@v1
      - id: wasmstore-opam-cache
        name: 'OCaml/Opam cache'
        uses: actions/cache@v3
        with:
          key: 'wasmstore-opam-${{ matrix.ocaml-compiler }}-${{ matrix.os }}'
          path: ~/.opam
      - id: wasmstore-dune-cache
        name: 'OCaml/Dune cache'
        uses: actions/cache@v3
        with:
          key: wasmstore-dune-${{ matrix.ocaml-compiler }}-${{ matrix.os }}-${{ hashFiles('src/**') }}-${{ hashFiles('dune-project') }}
          path: _build
      - name: 'Use OCaml ${{ matrix.ocaml-compiler }}'
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: '${{ matrix.ocaml-compiler }}'
      - run: opam install . --deps-only -y
      - name: 'Make release'
        run: opam exec -- make release
      # - name: Upload Artifact to Summary
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.ARTIFACT_DIR }}
      #     path: |
      #       *.tar.gz
      #       *.checksum.txt
      - name: Upload Artifact to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tar.gz
            *.checksum.txt
    strategy:
      fail-fast: true
      matrix:
        ocaml-compiler:
          - 5.0.0
        os:
          - macos-latest
          - ubuntu-latest
